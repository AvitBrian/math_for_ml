# -*- coding: utf-8 -*-
"""Quiz_2 - Template- Calculus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bEEEhcQV--Vf3PPttEwgu0jXSqfwV9Jy

# Task 1: Write a dynamic function to find the derivative of any function f(x)
"""

#TO DO: Create a function that does a derivative for any function
import sympy as sp
import matplotlib.pyplot as plt
import numpy as np
def dy_dx(expression, variable='x'):
  x = sp.symbols(variable)
  f = sp.sympify(expression)
  derivative = sp.diff(f,x)
  return derivative

"""# Task 2: Test the derivative function written with a quadratic equation of your choice
*NB: Must have atleast 2 minimas and atleast 2 maximas*
"""

x = sp.symbols('x')
def f(x):

  return x

def g(x):

  return x**2 - 4*x + 4




print("Ã¤nswer: ", dy_dx(g(x)))

"""#Task 3: Plot a graph of the quadratic Equation"""

# g = sp.lambdify(x, g(x), 'numpy')
x = np.linspace(0, 10, 100)
y = g(x)

plt.plot(x, y, label="A random Quadratic Equation")
plt.xlabel('x')
plt.ylabel('g(x)')
plt.title('Plot of a Quadratic Equation')
plt.legend()
plt.show()

"""# Task 4: Create separate array of Minimas and maximas"""

def get_maxima_minima(equation):
    x = sp.symbols('x')
    derivative = dy_dx(equation, 'x')
    critical_points = sp.solve(derivative, x)
    x_critical_points = []
    y_critical_points = []

    for point in critical_points:
        values = equation.subs(x, point)
        x_critical_points.append(point)
        y_critical_points.append(values)

    return x_critical_points, y_critical_points

y = 'x**3 - 6*x**2 + 9*x + 3'
equation = sp.sympify(y)
minima, maxima = get_maxima_minima(equation)

print(f'minima:', minima)
print(f'maxima', maxima)

"""#Finally, What is the global Minima and the Global maxima _ Plot this so that I can see"""

x = np.linspace(0, 10, 100)
y = g(x)


plt.plot(x, y, label='Quadratic Equation')
plt.scatter(minima, [g(point) for point in minima], color='red', marker='o', label='Minima')
plt.scatter(maxima, [g(point) for point in maxima], color='green', marker='o', label='Maxima')
plt.title('Graph of the Quadratic Equation with Minima and Maxima')
plt.xlabel('x')
plt.ylabel('f(x)')
plt.legend()
plt.show()

"""# Things We did in Class

We came up with a functon

$$
f(x) = 4x^2 + x^-1
$$

So we create a fucntion in python



```
def f(x):
  #see our code below
```


"""

#This is an Example of a quadratic function
def f(x):
   return (4 * (x** 2)) + (x ** -1)

"""We manuall calculated the derivative  and got that
$$
df(x)/dx = 8x^1 + x^-2
$$

Using the formula above we find points where the derivative is 0

the values are:

$$
x1 = 0.5, x1 = - 0.5,x1 = 0,
$$

If you replace this in our original formula

$$
f(0.5) = 4(0.5)^2 + (0.5^-1 = -1.0
$$
$$
f(0) = 4x^2 + x^-1 = No solution
$$
$$
f(-0.5) = 4x^2 + x^-1 = 1
$$

Meaning our curve is flat at point $$(0.5,1) $$ and at $$ (-0.5,1)$$

Proof Pending........

Here is how we tried with code and got some errors
"""

x1 = 0.5
x2 = -0.5
x3 = 0

y1 = f(x1)
y2 = f(x2)
y3 = f(x3)

print(y2)
(0.5,3)

"""# **You can now do the Rest.All the Best ........**"""